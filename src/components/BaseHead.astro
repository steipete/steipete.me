---
import { SITE } from '../consts'

interface Props {
  title?: string
  description?: string
  image?: string
  type?: string
  canonicalURL?: URL
}

const {
  title = SITE.title,
  description = SITE.description,
  image = '/images/og.png',
  type = 'website',
  canonicalURL = new URL(Astro.url.pathname, Astro.site),
} = Astro.props

const fullTitle = title === SITE.title ? title : `${title} | ${SITE.title}`
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<meta name="generator" content={Astro.generator} />
<meta name="author" content={SITE.author} />

<!-- Favicon -->
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
<link rel="manifest" href="/site.webmanifest" />

<!-- Primary Meta Tags -->
<title>{fullTitle}</title>
<meta name="title" content={fullTitle} />
<meta name="description" content={description} />

<!-- Theme Color -->
<meta name="theme-color" content="#ffffff" media="(prefers-color-scheme: light)" />
<meta name="theme-color" content="#1a1a1a" media="(prefers-color-scheme: dark)" />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={type} />
<meta property="og:site_name" content={SITE.title} />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={fullTitle} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.site)} />

<!-- Twitter -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:site" content="@steipete" />
<meta name="twitter:creator" content="@steipete" />
<meta name="twitter:title" content={fullTitle} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={new URL(image, Astro.site)} />

<!-- Canonical -->
<link rel="canonical" href={canonicalURL} />

<!-- RSS -->
<link
  rel="alternate"
  type="application/rss+xml"
  title={`${SITE.title} | RSS Feed`}
  href="/rss.xml"
/>

<!-- Sitemap -->
<link rel="sitemap" href="/sitemap-index.xml" />

<!-- Dark Mode Detection -->
<script is:inline>
  // Set theme based on system preferences
  const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches
  const theme = prefersDark ? 'dark' : 'light'

  if (theme === 'dark') {
    document.documentElement.classList.add('dark')
  } else {
    document.documentElement.classList.remove('dark')
  }

  // Listen for changes in system preference
  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {
    if (e.matches) {
      document.documentElement.classList.add('dark')
    } else {
      document.documentElement.classList.remove('dark')
    }
  })
</script>

<slot />