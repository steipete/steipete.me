---
import { type CollectionEntry, getCollection } from "astro:content";
import PostDetails from "@/layouts/PostDetails.astro";
import getSortedPosts from "@/utils/getSortedPosts";
import { getPath } from "@/utils/getPath";

export interface Props {
  post: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
  const posts = await getCollection("blog", ({ data }) => !data.draft && !data.unlisted);
  const postResult = posts.map((post) => ({
    params: { slug: getPath(post.id, post.filePath, false) },
    props: { post },
  }));

  // Also include unlisted posts so they can be accessed via direct URL
  const unlistedPosts = await getCollection("blog", ({ data }) => !data.draft && data.unlisted);
  const unlistedResult = unlistedPosts.map((post) => ({
    params: { slug: getPath(post.id, post.filePath, false) },
    props: { post },
  }));

  return [...postResult, ...unlistedResult];
}

const { post } = Astro.props;

const posts = await getCollection("blog");
const sortedPosts = getSortedPosts(posts);
---

<PostDetails post={post} posts={sortedPosts} />
