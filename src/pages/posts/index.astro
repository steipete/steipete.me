---
import Layout from '../../layouts/Layout.astro'
import Link from '../../components/Link.astro'
import FormattedDate from '../../components/FormattedDate.astro'
import { getCollection } from 'astro:content'
import { SITE } from '../../consts'

// Get all blog posts and sort by date
let allPosts = await getCollection('blog')

// Add filename as slug if it's not available
allPosts = allPosts.map(post => {
  if (!post.slug) {
    const filePath = post.id
    const fileName = filePath.split('/').pop() || ''
    const fileNameWithoutExt = fileName.replace(/\.(md|mdx)$/, '')
    post.slug = fileNameWithoutExt
  }
  return post
})

allPosts = allPosts.sort(
  (a, b) => new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf(),
)

// Pagination settings
const postsPerPage = SITE.postsPerPage
const totalPages = Math.ceil(allPosts.length / postsPerPage)
const currentPage = 1
const posts = allPosts.slice(0, postsPerPage)
---

<Layout title="Blog Posts" description="Articles and tutorials on iOS development, tech, and entrepreneurship">
  <section class="py-8">
    <div class="mb-8">
      <h1 class="text-4xl font-bold tracking-tight mb-4">Blog Posts</h1>
      <p class="text-foreground/80">
        A collection of my thoughts on iOS development, tech, and entrepreneurship.
      </p>
    </div>

    <div class="flex flex-col gap-10">
      {
        posts.map((post) => (
          <article class="flex flex-col space-y-4">
            <div class="space-y-2">
              <div class="text-muted-foreground text-sm">
                <FormattedDate date={post.data.pubDate} />
              </div>
              <h2 class="text-2xl font-bold leading-tight">
                <Link href={`/posts/${post.slug}/`} class="text-foreground">
                  {post.data.title}
                </Link>
              </h2>
            </div>
            <p class="text-foreground/80">{post.data.description}</p>
            <div>
              <Link
                href={`/posts/${post.slug}/`}
                class="text-foreground inline-flex items-center gap-1 font-medium"
              >
                Read more
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="size-4"
                >
                  <path d="M5 12h14" />
                  <path d="m12 5 7 7-7 7" />
                </svg>
              </Link>
            </div>
          </article>
        ))
      }
    </div>

    {totalPages > 1 && (
      <nav aria-label="Pagination" class="mt-12 flex justify-center">
        <ul class="flex items-center gap-1">
          {currentPage > 1 && (
            <li>
              <Link
                href={`/posts${currentPage - 1 === 1 ? '' : '/' + (currentPage - 1)}`}
                class="bg-secondary flex h-9 w-9 items-center justify-center rounded-md text-sm"
                aria-label="Go to previous page"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="size-4"
                >
                  <path d="m15 18-6-6 6-6" />
                </svg>
              </Link>
            </li>
          )}

          {Array.from({ length: totalPages }).map((_, i) => (
            <li>
              <Link
                href={`/posts${i === 0 ? '' : '/' + (i + 1)}`}
                class={`flex h-9 w-9 items-center justify-center rounded-md text-sm ${
                  currentPage === i + 1
                    ? 'bg-primary text-primary-foreground'
                    : 'bg-secondary'
                }`}
                aria-label={`Go to page ${i + 1}`}
                aria-current={currentPage === i + 1 ? 'page' : undefined}
              >
                {i + 1}
              </Link>
            </li>
          ))}

          {currentPage < totalPages && (
            <li>
              <Link
                href={`/posts/${currentPage + 1}`}
                class="bg-secondary flex h-9 w-9 items-center justify-center rounded-md text-sm"
                aria-label="Go to next page"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="size-4"
                >
                  <path d="m9 18 6-6-6-6" />
                </svg>
              </Link>
            </li>
          )}
        </ul>
      </nav>
    )}
  </section>
</Layout>