---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import { SITE } from '../../consts';

export async function getStaticPaths({ paginate }) {
  const allPosts = await getCollection('blog');
  const sortedPosts = allPosts.sort(
    (a, b) => {
      const dateA = new Date(a.data.pubDate || a.data.date || 0).valueOf();
      const dateB = new Date(b.data.pubDate || b.data.date || 0).valueOf();
      return dateB - dateA;
    }
  );

  return paginate(sortedPosts, { pageSize: 10 });
}

const { page } = Astro.props;
const { data: posts, currentPage, lastPage } = page;
---

<Layout title={`Page ${currentPage} | ${SITE.title}`} description={SITE.description}>
  <section class="py-8">
    <h1 class="text-4xl font-bold tracking-tight mb-10">Latest Posts</h1>

    <div class="space-y-12">
      {posts.map((post) => (
        <article class="border-b border-border pb-8 last:border-0">
          <h2 class="text-2xl font-semibold leading-tight mb-2">
            <a href={`/blog/${post.slug}/`} class="hover:text-primary">
              {post.data.title}
            </a>
          </h2>

          <div class="flex items-center text-sm text-muted-foreground mb-4">
            <FormattedDate date={new Date(post.data.pubDate || post.data.date)} />
          </div>

          {post.data.description && (
            <p class="text-foreground/80 mb-4">{post.data.description}</p>
          )}

          <div>
            <a href={`/blog/${post.slug}/`} class="text-primary font-medium hover:underline">
              Read more →
            </a>
          </div>
        </article>
      ))}
    </div>

    <div class="flex justify-center mt-10 gap-2">
      {currentPage > 1 && (
        <a
          href={currentPage - 1 === 1 ? '/' : `/page/${currentPage - 1}`}
          class="px-4 py-2 bg-secondary rounded-md hover:bg-accent"
        >
          ← Previous
        </a>
      )}

      {Array.from({ length: lastPage }).map((_, i) => (
        <a
          href={i === 0 ? '/' : `/page/${i + 1}`}
          class={`px-4 py-2 rounded-md ${currentPage === i + 1
            ? 'bg-primary text-primary-foreground'
            : 'bg-secondary hover:bg-accent'}`}
        >
          {i + 1}
        </a>
      ))}

      {currentPage < lastPage && (
        <a
          href={`/page/${currentPage + 1}`}
          class="px-4 py-2 bg-secondary rounded-md hover:bg-accent"
        >
          Next →
        </a>
      )}
    </div>
  </section>
</Layout>