---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Link from '../components/Link.astro';
import { SITE } from '../consts';

// Get all blog posts and sort by date
let allPosts = await getCollection('blog');
allPosts = allPosts.sort(
	(a, b) => new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf(),
);

// Pagination settings
const postsPerPage = 10;
const totalPages = Math.ceil(allPosts.length / postsPerPage);
const currentPage = 1;
const posts = allPosts.slice(0, postsPerPage);
---

<Layout title={SITE.title} description={SITE.description}>
  <section class="py-8">
    <h1 class="text-4xl font-bold tracking-tight mb-10">Latest Posts</h1>
    
    <div class="space-y-12">
      {posts.map((post) => (
        <article class="border-b border-border pb-8 last:border-0">
          <h2 class="text-2xl font-semibold leading-tight mb-2">
            <a href={`/blog/${post.slug}/`} class="hover:text-primary">
              {post.data.title}
            </a>
          </h2>
          
          <div class="flex items-center text-sm text-muted-foreground mb-4">
            <FormattedDate date={new Date(post.data.pubDate)} />
          </div>
          
          {post.data.description && (
            <p class="text-foreground/80 mb-4">{post.data.description}</p>
          )}
          
          <div>
            <a href={`/blog/${post.slug}/`} class="text-primary font-medium hover:underline">
              Read more →
            </a>
          </div>
        </article>
      ))}
    </div>
    
    {totalPages > 1 && (
      <div class="flex justify-center mt-10 gap-2">
        {currentPage > 1 && (
          <a 
            href={currentPage - 1 === 1 ? '/' : `/page/${currentPage - 1}`}
            class="px-4 py-2 bg-secondary rounded-md hover:bg-accent"
          >
            ← Previous
          </a>
        )}
        
        {Array.from({ length: totalPages }).map((_, i) => (
          <a 
            href={i === 0 ? '/' : `/page/${i + 1}`}
            class={`px-4 py-2 rounded-md ${currentPage === i + 1 
              ? 'bg-primary text-primary-foreground' 
              : 'bg-secondary hover:bg-accent'}`}
          >
            {i + 1}
          </a>
        ))}
        
        {currentPage < totalPages && (
          <a 
            href={`/page/${currentPage + 1}`}
            class="px-4 py-2 bg-secondary rounded-md hover:bg-accent"
          >
            Next →
          </a>
        )}
      </div>
    )}
  </section>
</Layout>