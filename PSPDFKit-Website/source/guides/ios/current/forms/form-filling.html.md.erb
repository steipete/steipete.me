---
title: Programmatic Form Filling
section: developers

---

PSPDFKit for iOS fully supports the AcroForm standard and can view and fill forms inside the [`PSPDFViewController`][].

Forms are an optional component that can be licensed. If not licensed, forms will simply be invisible. Forms can also be manually switched off via setting the [`formsEnabled`][] property of the [`PSPDFDocument`][] to `false`.

The PSPDFCatalog example you find in the examples directory of the framework download contains a "Programmatic Form Filling" that demonstrates how objects can be queried and modified:

[==

```swift
// Model editing needs to happen on the main thread.
guard let annotations = document.annotationsForPage(at: 0, type: .widget) else { return }
for annotation in annotations {
    switch annotation {
    case let textFieldFormElement as PSPDFTextFieldFormElement:
        guard let fieldName = textFieldFormElement.fieldName else { return }
        textFieldFormElement.contents = String(format: "Test %@", arguments: [fieldName])
    case let buttonFormElement as PSPDFButtonFormElement:
        buttonFormElement.toggleButtonSelectionState()
    default:
        break
    }
}
```

```objc
// Model editing needs to happen on the main thread.
NSArray *annotations = [document annotationsForPageAtIndex:0 type:PSPDFAnnotationTypeWidget];
for (PSPDFFormElement *formElement in annotations) {
    if ([formElement isKindOfClass:PSPDFTextFieldFormElement.class]) {
        formElement.contents = [NSString stringWithFormat:@"Test %@", formElement.fieldName];
    } else if ([formElement isKindOfClass:PSPDFButtonFormElement.class]) {
        [(PSPDFButtonFormElement *)formElement toggleButtonSelectionState];
    }
}
```

==]

[`formsEnabled`]: https://pspdfkit.com/api/ios/Classes/PSPDFDocument.html#/c:objc(cs)PSPDFDocument(py)formsEnabled
