---
title: PDF Actions
section: developers
---

A PDF action is similar to a web hyperlink, but it’s much more flexible. PSPDFKit supports most common actions defined in Adobe’s PDF Reference (page 417ff).

The most common types are GoTo and URI. However, many documents also use GoToR, Launch, Named, or JavaScript for page changes.

Every [`PSPDFAction`][] subclass can either be parsed from a PDF or created in code. It can also be serialized via `NSKeyedArchiver` (supporting `NSSecureCoding`):

| Action     | PSPDFKit Class                | Use Case                                               |
| ---------- | ----------------------------- | ------------------------------------------------------ |
| GoTo       | [`PSPDFGoToAction`][]         | Go to a destination (page) in the current document.    |
| GoToR      | [`PSPDFRemoteGoToAction`][]   | Go to a destination in another document.               |
| GoToE      | [`PSPDFEmbeddedGoToAction`][] | Go to a destination in an embedded file.               |
| Launch     | [`PSPDFRemoteGoToAction`][]   | Launch an application, usually to open a file.         |
| URI        | [`PSPDFURLAction`][]          | Resolve a uniform resource identifier (web link).      |
| Hide       | [`PSPDFHideAction`][]         | Set an annotation’s hidden flag.                       |
| JavaScript | [`PSPDFJavaScriptAction`][]   | Execute a JavaScript script.                           |
| Rendition  | [`PSPDFRenditionAction`][]    | Control the playing of multimedia content.             |
| SubmitForm | [`PSPDFSubmitFormAction`][]   | Send data to a uniform resource locator.               |
| ResetForm  | [`PSPDFResetFormAction`][]    | Set fields to their default values.                    |
| Named      | [`PSPDFNamedAction`][]        | Execute an action predefined by the conforming reader. |

Unsupported actions include Thread, Sound, Movie, ImportData, SetOCGState, Trans, and GoTo3DView.

Actions are chainable via the [`subActions`][] property. Certain annotations, such as [`PSPDFLinkAnnotation`][] and [`PSPDFWidgetAnnotation`][], can contain an [`action`][]. Furthermore, every annotation can contain [`additionalActions`][] that are executed on certain trigger events. You can use the [`additionalActions`][] property to add actions to annotation types that don’t have an action handler by default, such as stamp annotations. In most cases, the `PSPDFAnnotationTriggerEventMouseUp` event is what you want.

[`PSPDFBookmark`][] and [`PSPDFOutlineElement`][] also contain an [`action`][], thereby supporting the same types of actions as an annotation. (A PDF outline can open a web link or even play a video.)

## Trigger Events

See [`PSPDFAnnotationTriggerEvent `][] for available trigger events. PSPDFKit supports a subset of these events.

## Executing Actions

You can use [`PSPDFViewController`]’s [`-executePDFAction:targetRect:pageIndex:animated:actionContainer:`] to execute PDF actions, such as the [`action`] property of [`PSPDFLinkAnnotation`]:

[==

```swift
pdfController.execute(linkAnnotation.action, targetRect: linkAnnotation.boundingBox, pageIndex: linkAnnotation.absolutePageIndex, animated: true, actionContainer: linkAnnotation)
```

```objc
[pdfController executePDFAction:linkAnnotation.action targetRect:linkAnnotation.boundingBox pageIndex:linkAnnotation.absolutePageIndex animated:YES actionContainer:linkAnnotation];
```

==]

**ℹ️ Note:** The file structure for the action has to be correctly specified for it to work, and the files in question should be in a local folder.

[`-executepdfaction:targetrect:pageindex:animated:actioncontainer:`]: https://pspdfkit.com/api/ios/Classes/PSPDFViewController.html#/c:objc(cs)PSPDFViewController(im)executePDFAction:targetRect:pageIndex:animated:actionContainer:
[`action`]: https://pspdfkit.com/api/ios/Classes/PSPDFLinkAnnotation.html#/c:objc(cs)PSPDFLinkAnnotation(py)action
[`pspdflinkannotation`]: https://pspdfkit.com/api/ios/Classes/PSPDFLinkAnnotation.html
[`additionalactions`]: https://pspdfkit.com/api/ios/Classes/PSPDFAnnotation.html#/c:objc(cs)PSPDFAnnotation(py)additionalActions
[`pspdfaction`]: https://pspdfkit.com/api/Classes/PSPDFAction.html
[`pspdfgotoaction`]: https://pspdfkit.com/api/Classes/PSPDFGoToAction.html
[`pspdfremotegotoaction`]: https://pspdfkit.com/api/Classes/PSPDFRemoteGoToAction.html
[`pspdfembeddedgotoaction`]: https://pspdfkit.com/api/Classes/PSPDFEmbeddedGoToAction.html
[`pspdfremotegotoaction`]: https://pspdfkit.com/api/Classes/PSPDFRemoteGoToAction.html
[`pspdfurlaction`]: https://pspdfkit.com/api/Classes/PSPDFURLAction.html
[`pspdfhideaction`]: https://pspdfkit.com/api/Classes/PSPDFHideAction.html
[`pspdfjavascriptaction`]: https://pspdfkit.com/api/Classes/PSPDFJavaScriptAction.html
[`pspdfrenditionaction`]: https://pspdfkit.com/api/Classes/PSPDFRenditionAction.html
[`pspdfsubmitformaction`]: https://pspdfkit.com/api/Classes/PSPDFSubmitFormAction.html
[`pspdfresetformaction`]: https://pspdfkit.com/api/Classes/PSPDFResetFormAction.html
[`pspdfnamedaction`]: https://pspdfkit.com/api/Classes/PSPDFNamedAction.html
[`subactions`]: https://pspdfkit.com/api/ios/Classes/PSPDFAction.html#/c:objc(cs)PSPDFAction(py)subActions
[`pspdflinkannotation`]: https://pspdfkit.com/api/Classes/PSPDFLinkAnnotation.html
[`pspdfwidgetannotation`]: https://pspdfkit.com/api/Classes/PSPDFWidgetAnnotation.html
[`action`]: https://pspdfkit.com/api/ios/Classes/PSPDFLinkAnnotation.html#/c:objc(cs)PSPDFLinkAnnotation(py)action
[`pspdfbookmark`]: https://pspdfkit.com/api/Classes/PSPDFBookmark.html
[`pspdfannotationtriggerevent `]: https://pspdfkit.com/api/ios/Other%20Enums.html#/c:@E@PSPDFAnnotationTriggerEvent
