---
title: Rendering PDF Pages
section: developers
---

Rendering a PDF to an image is made simple with the PSPDFKit .NET Library. We leverage native .NET standard features in order to maintain compatibility and stay efficient.

## Render a Page

Once you have a document instance, it’s very simple to render a page. The following will open a document and render page 0 with the dimensions of the page:

```csharp
var document = new Document(new FileDataProvider("Assets/default.pdf"));
var page = document.GetPage(0);
var bitmap = page.RenderPage();
```

It’s also possible to pass custom dimensions to scale the image:

```csharp
var bitmap = page.RenderPage(50, 50);
```

## Save to File

The PSPDFKit .NET Library uses the Microsoft [`System.Drawing.Common`][`system-drawing-common`] package to handle drawing and bitmaps. This package may also require a library installation on your target system.

#### Linux

```bash
sudo apt install libgdiplus
```

#### macOS

```bash
brew install mono-libgdiplus
```

`RenderPage` returns a native .NET [`Bitmap`][] object. Saving it out as a PNG image, for example, would then look like this:

```csharp
bitmap.Save("output.png", ImageFormat.Png);
```

[`bitmap`]: https://docs.oracle.com/javase/8/docs/api/java/awt/image/BufferedImage.html
[`system-drawing-common`]: https://www.nuget.org/packages/System.Drawing.Common/4.5.1
