---
title: Text Extraction
section: developers
---

Extracting text from a PDF can be a complex task, so we offer several abstractions to make this simpler. In a PDF, text usually consists of glyphs that are absolutely positioned. PSPDFKit heuristically splits these glyphs up into words and blocks of text. Our [`PdfView`][pdf-view] leverages this information to allow users to select and annotate text.

## Text Parser

[`TextParser`][text-parser] offers a simple API to get the [`text`][text], [`Glyph`][glyph]s, [`Word`][word]s, and [`TextBlock`][text-block]s from a given PDF page. Every page of a PDF has a text parser that returns information about the text on a page:

```csharp
var textParser = await doc.GetTextParserAsync(0);
var text = await textParser.GetTextForRectsAsync(rects);
var glyphs = await textParser.GetGlyphsAsync();
var words = TextParser.WordsFromGlyphs(glyphs);
var textsBlocks = await textParser.GetTextAsync();
```

[`TextParser`][text-parser] also ensures that the text it extracts from a PDF follows any logical structure defined in the PDF (see section 14.7 of the [PDF Specification][pdf-spec]), thereby enabling support for correctly handling different text-writing directions.

### Glyphs

[`Glyph`][glyph] is the building block for all text extraction in PSPDFKit. It represents a single glyph on a PDF page. Its [`Rect`][glyph-rect] property specifies, in PDF coordinates, where it is located on the page, and its [`Contents`][glyph-contents] property returns the text it contains. The [`Index`][glyph-index] property specifies the index of the glyph on the page in reading order. Consider a page with the following text:

```
The quick brown fox jumps over the lazy dog.
--------------------------^
```

The [`Glyph`][glyph] that represents the o in over will have an `Index` of 26. This index is unique to this glyph, and it can be used to directly access it from the [`Glyph`][glyph]s returned from a [`TextParser`][text-parser]:

```csharp
var textParser = await doc.GetTextParserAsync(0);
var glyphs = await textParser.GetGlyphsAsync();

// Guaranteed to be `true`.
var indexEqualTo26 = glyphs[26].Index == 26
```

This makes getting a particular glyph (and glyphs near it) much faster, as you already know the index. Ordering glyphs correctly is important if, for example, you wish to combine multiple glyphs and display something to the user.

### Text Blocks

A [`TextBlock`][text-block] returned from the [`TextParser`][text-parser] represents a contiguous group of glyphs, usually in a single line. For PDFs with multiple columns of text, a text block is a single line in a given column.

### Words

A [`Word`][word], as the name suggests, represents a single word in a PDF. [`TextParser`][text-parser] can calculate these words from glyphs using the [`WordsFromGlyphs`][words-from-glyphs] method:

```csharp
var textParser = await doc.GetTextParserAsync(0);
var glyphs = await textParser.GetGlyphsAsync();
var words = TextParser.WordsFromGlyphs(glyphs);
```

A [`Word`][word] has a [`Frame`][word-frame] that describes the area the word covers on the page. It also has [`Range`][word-range] that describes the range within the provided glyphs that make up the word, and a [`Contents`][word-contents], which is the string of text that [`Word`][word] represents.

[glyph-contents]: /api/windows/PSPDFKit/PSPDFKit.Pdf.Glyph.html#PSPDFKit_Pdf_Glyph_Contents
[glyph-index]: /api/windows/PSPDFKit/PSPDFKit.Pdf.Glyph.html#PSPDFKit_Pdf_Glyph_Index
[glyph-rect]: /api/windows/PSPDFKit/PSPDFKit.Pdf.Glyph.html#PSPDFKit_Pdf_Glyph_Rect
[glyph]: /api/windows/PSPDFKit/PSPDFKit.Pdf.Glyph.html
[pdf-spec]: https://www.adobe.com/content/dam/acom/en/devnet/pdf/pdfs/PDF32000_2008.pdf
[pdf-view]: /api/windows/PSPDFKit/PSPDFKit.UI.PdfView.html
[text-block]: /api/windows/PSPDFKit/PSPDFKit.Pdf.TextBlock.html
[text-parser]: /api/windows/PSPDFKit/PSPDFKit.Pdf.TextParser.html
[text]: /api/windows/PSPDFKit/PSPDFKit.Pdf.TextParser.html#PSPDFKit_Pdf_TextParser_GetTextForRectsAsync_IEnumerable_PSPDFKitFoundation_Rect__
[word-contents]: /api/windows/PSPDFKit/PSPDFKit.Pdf.Word.html
[word-frame]: /api/windows/PSPDFKit/PSPDFKit.Pdf.Word.html
[word-range]: /api/windows/PSPDFKit/PSPDFKit.Pdf.Word.html
[word]: /api/windows/PSPDFKit/PSPDFKit.Pdf.Word.html
[words-from-glyphs]: /api/windows/PSPDFKit/PSPDFKit.Pdf.TextParser.html#PSPDFKit_Pdf_TextParser_WordsFromGlyphs_IList_PSPDFKit_Pdf_Glyph__
