---
title: Annotation-Editing Configuration
section: developers
---

Annotation editing can be configured using [`PdfActivityConfiguration.Builder`][] when using [`PdfActivity`][], or using [`PdfConfiguration.Builder`][] when using [`PdfFragment`][].

## Control Which Annotation Types Can Be Edited

By default, PSPDFKit enables editing of all supported annotation types. You can disable editing for all annotation types via [`#disableAnnotationEditing`][].

If you want to control which annotation types are editable, use [`#editableAnnotationTypes`][]. Passing `null` or an empty list to this method means that all supported annotation types are editable. For example:

[==

```kotlin
val config =
    PdfActivityConfiguration.Builder(context)
        // By default, all supported annotation types are editable.
        // You can selectively enable certain types by providing them here.
        .editableAnnotationTypes(listOf(AnnotationType.NOTE, AnnotationType.INK, AnnotationType.STAMP))
        .build()
```

```java
final PdfActivityConfiguration config =
    new PdfActivityConfiguration.Builder(context)
        // By default, all supported annotation types are editable.
        // You can selectively enable certain types by providing them here.
        .editableAnnotationTypes(Arrays.asList(AnnotationType.NOTE, AnnotationType.INK, AnnotationType.STAMP))
        .build();
```

==]

## Control Which Annotation Tools Are Enabled

You can control which annotation tools are enabled in the annotation creation toolbar via [`#enabledAnnotationTools`][]. Passing `null` or an empty list to this method means that all supported annotation tools are enabled. For example:

[==

```kotlin
// In this example, we want to enable all annotation tools except the `IMAGE` tool.
val enabledAnnotationTools = AnnotationTool.values().toMutableList()
enabledAnnotationTools.remove(AnnotationTool.IMAGE)

val config =
    PdfActivityConfiguration.Builder(context)
        // By default, all supported annotation tools are enabled.
        // You can selectively enable certain tools by providing them here.
        .enabledAnnotationTools(enabledAnnotationTools)
        .build()
```

```java
// In this example, we want to enable all annotation tools except the `IMAGE` tool.
List<AnnotationTool> enabledAnnotationTools = new ArrayList<>();
enabledAnnotationTools.addAll(Arrays.asList(AnnotationTool.values()));
enabledAnnotationTools.remove(AnnotationTool.IMAGE);

final PdfActivityConfiguration config =
    new PdfActivityConfiguration.Builder(context)
        // By default, all supported annotation tools are enabled.
        // You can selectively enable certain tools by providing them here.
        .enabledAnnotationTools(enabledAnnotationTools)
        .build();
```

==]

**Note:** Certain [`AnnotationTool`][]s are enabled only when their underlying annotation type, [`AnnotationTool#toAnnotationType`][], is editable and annotation editing is enabled.

## Control Whether or Not the Annotation Inspector Is Enabled

You can control whether or not the annotation inspector is enabled in [`PdfActivity`][] via the [`#setAnnotationInspectorEnabled`][] method in [`PdfActivityConfiguration.Builder`][]. When the annotation inspector is disabled, the annotation picker icon is hidden from toolbars.

[`pdfactivityconfiguration.builder`]: https://pspdfkit.com/api/android/reference/com/pspdfkit/configuration/activity/PdfActivityConfiguration.Builder.html
[`#disableannotationediting`]: https://pspdfkit.com/api/android/reference/com/pspdfkit/configuration/activity/PdfActivityConfiguration.Builder.html#disableAnnotationEditing()
[`#editableannotationtypes`]: https://pspdfkit.com/api/android/reference/com/pspdfkit/configuration/activity/PdfActivityConfiguration.Builder.html#editableAnnotationTypes(java.util.List<com.pspdfkit.annotations.AnnotationType>)
[`#enabledannotationtools`]: https://pspdfkit.com/api/android/reference/com/pspdfkit/configuration/activity/PdfActivityConfiguration.Builder.html#enabledAnnotationTools(java.util.List<com.pspdfkit.ui.special_mode.controller.AnnotationTool>)
[`annotationtool`]: https://pspdfkit.com/api/android/reference/com/pspdfkit/ui/special_mode/controller/AnnotationTool.html
[`annotationtool#toannotationtype`]: https://pspdfkit.com/api/android/reference/com/pspdfkit/ui/special_mode/controller/AnnotationTool.html#toAnnotationType()
[`#setannotationinspectorenabled`]: https://pspdfkit.com/api/android/reference/com/pspdfkit/configuration/activity/PdfActivityConfiguration.Builder.html#setAnnotationInspectorEnabled(boolean)
