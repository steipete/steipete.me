---
title: Text Markup Annotations
section: developers
---

PSPDFKit provides an abstract class, [`TextMarkupAnnotation`][], for all text markup annotations: [`HighlightAnnotation`][], [`SquigglyAnnotation`][], [`UnderlineAnnotation`][], and [`StrikeOutAnnotation`][].

## Retrieving Highlighted Text

Highlighted text can easily be retrieved with [`TextMarkupAnnotation#getHighlightedText()`][]:

[==

```kotlin
val pageIndex = 0
val annotations: List<Annotation> = document.annotationProvider.getAnnotations(pageIndex)
val highlightedTextMarkups: MutableList<String> = ArrayList()
for (annotation in annotations) {
    if (annotation is TextMarkupAnnotation) {
        val highlightedText = annotation.highlightedText
        highlightedText?.let { highlightedTextMarkups.add(it) }
    }
}
```

```java
final int pageIndex = 0;
List<Annotation> annotations = document.getAnnotationProvider().getAnnotations(pageIndex);
List<String> highlightedTextMarkups = new ArrayList<>();
for (Annotation annotation : annotations) {
    if (annotation instanceof TextMarkupAnnotation) {
        TextMarkupAnnotation textMarkupAnnotation = (TextMarkupAnnotation) annotation;
        String highlightedText = textMarkupAnnotation.getHighlightedText();
        highlightedTextMarkups.add(highlightedText);
    }
}
```

==]

> **ℹ️ Note:** [`TextMarkupAnnotation#getHighlightedText()`][] may return `null` if no text is highlighted.

## Creating Markup Annotations from Page Text

You can retrieve text rectangles required to create markup annotations by calling [`PdfDocument#getPageTextRects`][].

For example, we’ll highlight the first occurrence of a random string on the page:

[==

```kotlin
// Search for the position of text that should be highlighted on the page.
val textToHighlight = "text to highlight"
val textIndexOnPage = document.getPageText(pageIndex).indexOf(textToHighlight)
if (textIndexOnPage >= 0) {
    // Create an annotation from the text rectangles on the page.
    val annotation = HighlightAnnotation(pageIndex, document.getPageTextRects(pageIndex, textIndexOnPage, textToHighlight.length))
    // Add the annotation to the page.
    fragment.addAnnotationToPage(annotation, false)
}
```

```java
// Search for the position of text that should be highlighted on the page.
String textToHighlight = "text to highlight";
int textIndexOnPage = document.getPageText(pageIndex).indexOf(textToHighlight);
if (textIndexOnPage >= 0) {
    // Create an annotation from the text rectangles on the page.
    HighlightAnnotation annotation = new HighlightAnnotation(pageIndex, document.getPageTextRects(pageIndex, textIndexOnPage, textToHighlight.length()));
    // Add the annotation to the page.
    fragment.addAnnotationToPage(annotation, false);
}
```

==]

[`textmarkupannotation`]: https://pspdfkit.com/api/android/reference/com/pspdfkit/annotations/TextMarkupAnnotation.html
[`highlightannotation`]: https://pspdfkit.com/api/android/reference/com/pspdfkit/annotations/HighlightAnnotation.html
[`squigglyannotation`]: https://pspdfkit.com/api/android/reference/com/pspdfkit/annotations/SquigglyAnnotation.html
[`underlineannotation`]: https://pspdfkit.com/api/android/reference/com/pspdfkit/annotations/UnderlineAnnotation.html
[`strikeoutannotation`]: https://pspdfkit.com/api/android/reference/com/pspdfkit/annotations/StrikeOutAnnotation.html
[`textmarkupannotation#gethighlightedtext()`]: https://pspdfkit.com/api/android/reference/com/pspdfkit/annotations/TextMarkupAnnotation.html#getHighlightedText()
[`pdfdocument#getpagetextrects`]: https://pspdfkit.com/api/android/reference/com/pspdfkit/document/PdfDocument.html#getPageTextRects(int,%20int,%20int)
