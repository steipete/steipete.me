---
title: FAQ
section: developers

---

## Do We Need to Use PSPDFKit Server or Can We Use Our Own Backend?

PSPDFKit Server is meant to run as a part of your application’s deployment. Using PSPDFKit Server is not a requirement, but we recommend it because it preprocesses documents and stores annotations.

However, PSPDFKit Server is not a replacement for your server; user authentication and document management still take place on your backend. Your backend uploads documents to PSPDFKit Server and hands out [JSON Web Tokens (JWTs) for authentication][pspdfkit guide authentication] to the clients on Android, iOS, and Web.

---

## What Deployment Should We Choose? Server-Backed or Standalone Deployment?

Both technologies have [different strengths and weaknesses][pspdfkit guide getting started].

**Standalone deployment** is extremely easy to integrate and can be used in any existing application without adding additional infrastructure. Rendering and data processing happens on the client [via WebAssembly or JavaScript][webassembly blog post]. This works best with [modern browsers][]. Loading the PDF rendering component [may take a few seconds][standalone performance]. The PDF document will be completely downloaded to the client before rendering.

**Server-backed deployment** allows you to stream documents and therefore has a faster initial load time. PDF documents can be kept secure on the server; only image-based render tiles are transferred on demand. Older browsers or weaker (mobile) clients enjoy a better performance, as computational-intensive rendering happens on the server. Keeping user annotations in sync with [Instant][] also requires a server to store annotations. The server-backed deployment option is already prepared for Instant if you consider this for a future upgrade.

PSPDFKit for Web generally will include both options, so a later change/upgrade is not a problem. If you are unsure what option fits your setup best, we recommend starting with server-backed deployment.

---

## What Languages on the Backend Are Supported? Do You Support ASP.NET/PHP/Ruby/Java/etc.?

PSPDFKit Server is _backend agnostic_. It uses a language-independent REST API. Your backend must be able to generate valid [JWTs for authentication][pspdfkit guide authentication]. PSPDFKit Server is using the standardized JWT format. The benefit of this format is that it has [countless implementations in all different programming][jwt.io] langauges.

---

## How Does User Authentication Work?

Managing users and their access to certain documents is a responsibility of your application. Giving a user access to a document means you sign a valid JWT with your private key. This signed token can then be passed to the clients, and in turn, back to PSPDFKit Server, which can verify if it is indeed authorized by your solution.

---

## What Types of Annotations Are Supported?

PSPDFKit for Web supports annotations of the following types:

- Ink annotations
- Link annotations
- Text annotations
- Note annotations
- Widget annotations
- Text markup annotations
  - Highlight
  - Squiggle
  - Strike out
  - Underline
- Shape annotations
  - Line
  - Rectangle
  - Ellipse
  - Polyline
  - Polygon

You can find details on the properties supported by each annotation type in our [JSON format specification][].

We’re committed to bringing PSPDFKit for Web to the same level as our products on iOS and Android. Just as we did on these platforms, we welcome your feedback on PSPDFKit for Web, which will help shape the product’s roadmap. Please contact us at sales@pspdfkit.com with your requirements.

[pspdfkit guide authentication]: ../../server-backed/client-authentication/
[pspdfkit guide getting started]: ../../pspdfkit-for-web/getting-started/
[webassembly blog post]: /blog/2017/webassembly-a-new-hope/
[modern browsers]: ../../pspdfkit-for-web/browser-support/
[standalone performance]: ../../standalone/performance/
[instant]: https://pspdfkit.com/instant/
[jwt.io]: https://jwt.io/
[json format specification]: https://pspdfkit.com/guides/server/current/api/json-format/
